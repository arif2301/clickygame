{"version":3,"sources":["components/Navbar/index.js","components/FriendCard/index.js","components/Wrapper/index.js","components/Title/index.js","App.js","index.js"],"names":["Navbar","props","className","yourScore","totalScore","FriendCard","onClick","score","id","alt","name","src","image","Wrapper","children","Title","topscore","yourscore","App","state","friends","shuffle","array","sort","Math","random","currentclicked","console","log","currentscore","bigscore","x","clicked","setState","randomFriends","this","map","friend","key","Component","ReactDOM","render","document","getElementById"],"mappings":"utEAyBiBA,MAnBf,SAAgBC,GACd,OACE,yBAAKC,UAAU,gCACf,wBAAIA,UAAU,wBAAd,eAIE,wBAAIA,UAAU,sBACZ,wBAAIA,UAAU,mBACZ,0BAAMA,UAAU,eAAhB,oCAA+D,0BAAMA,UAAU,WAAhB,cAC/D,0BAAMA,UAAU,eAAhB,aAAyCD,EAAME,UAAU,0BAAMD,UAAU,WAAhB,cACzD,0BAAMA,UAAU,eAAhB,gBAA4CD,EAAMG,WAAlD,KAA+D,0BAAMF,UAAU,WAAhB,kB,MCA5DG,MAbf,SAAoBJ,GAClB,OACE,yBAAKC,UAAU,QACL,0BAAMI,QAAS,kBAAML,EAAMM,MAAMN,EAAMO,KAAKN,UAAU,UAC5D,yBAAKO,IAAKR,EAAMS,KAAMC,IAAKV,EAAMW,MAAOV,UAAW,oB,MCD5CW,MAJf,SAAiBZ,GACf,OAAO,yBAAKC,UAAU,WAAWD,EAAMa,W,MCG1BC,MAJf,SAAed,GACb,OAAO,wBAAIC,UAAU,SAASD,EAAMa,W,OCMlCE,EAAW,EACXC,EAAY,EAiFDC,E,2MA7EbC,MAAQ,CACNC,UACAH,YACAD,Y,EAIFK,QAAU,SAAAC,GACRA,EAAMC,MAAK,kBAAMC,KAAKC,SAAW,O,EAInClB,MAAS,SAAAC,GAGT,IAAIkB,EAFFC,QAAQC,IAAK,QAAUpB,GAKzB,IAFA,IAAIqB,EAAe,EAAKV,MAAMF,UAC1Ba,EAAW,EAAKX,MAAMH,SACjBe,EAAE,EAAGA,EAAE,GAAIA,IAIdvB,IAAO,EAAKW,MAAMC,QAAQW,GAAGvB,KAC/BmB,QAAQC,IAAK,aAAe,EAAKT,MAAMC,QAAQW,GAAGC,SAClDL,QAAQC,IAAK,qBAAuB,EAAKT,MAAMC,QAAQW,GAAGrB,MAInC,KAFvBgB,EAAiB,EAAKP,MAAMC,QAAQW,GAAGC,UAGrCH,IACAF,QAAQC,IAAK,eAAiBC,GAC9B,EAAKI,SAAS,CAAEJ,iBAChBH,EAAiB,EACjBC,QAAQC,IAAK,wBAA0B,EAAKT,MAAMC,QAAQW,GAAGC,WAIzDF,EAASD,IACXC,EAAWD,GAEbA,EAAe,EACf,EAAKI,SAAS,CAAEJ,iBAChB,EAAKI,SAAS,CAAEH,eAItB,EAAKG,SAAS,CAAEP,mBAChB,EAAKO,SAAS,CAAEJ,iBAChB,EAAKI,SAAS,CAAEH,aAGhB,IAAII,EAAgB,EAAKf,MAAMC,QAAQG,MAAK,kBAAMC,KAAKC,SAAW,MAClE,EAAKQ,SAAS,CAAEC,kBAEhBP,QAAQC,IAAK,cAAgBE,I,wEAInB,IAAD,OACP,OACE,kBAAC,EAAD,KACE,kBAAC,EAAD,CAAQ3B,UAAWgC,KAAKhB,MAAMF,UAAWb,WAAY+B,KAAKhB,MAAMH,WAChE,kBAAC,EAAD,oBACCmB,KAAKhB,MAAMC,QAAQgB,KAAI,SAAAC,GAAM,OAC5B,kBAAC,EAAD,CACE9B,MAAS,EAAKA,MACdC,GAAI6B,EAAO7B,GACX8B,IAAKD,EAAO7B,GACZE,KAAM2B,EAAO3B,KACbE,MAAOyB,EAAOzB,gB,GAvER2B,a,MCRlBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.cd962198.chunk.js","sourcesContent":["\r\n\r\nimport React from \"react\";\r\n\r\n// import topscore and yourscore here\r\n// in line 16 and 17, it should've worked but it doesn't not sure why, any feedback is appreciated\r\n  function Navbar(props) {\r\n    return (\r\n      <nav className=\"navbar navbar-light bg-light\">\r\n      <h1 className=\"navbar-brand mb-0 h1\">Clicky Game</h1>\r\n\r\n\r\n      \r\n        <ul className=\"navbar-nav mr-auto\">\r\n          <li className=\"nav-item active\">\r\n            <span className=\"navbar-text\">Click an image to begin!       . <span className=\"sr-only\">(current)</span></span>\r\n            <span className=\"navbar-text\">   Score: {props.yourScore}<span className=\"sr-only\">(current)</span></span>\r\n            <span className=\"navbar-text\">| Top Score: {props.totalScore}  <span className=\"sr-only\">(current)</span></span>\r\n          </li>         \r\n        </ul>\r\n\r\n      </nav>\r\n    )\r\n  }\r\n\r\n  export default Navbar;","import React from \"react\";\nimport \"./style.css\";\n\n// function that prints out the images\nfunction FriendCard(props) {\n  return (\n    <div className=\"card\">\n              <span onClick={() => props.score(props.id)} className=\"remove\">\n        <img alt={props.name} src={props.image} className= \"card-img-top\" />\n\n        </span>\n\n    </div>\n  );\n}\n\n\nexport default FriendCard;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper(props) {\n  return <div className=\"wrapper\">{props.children}</div>;\n}\n\nexport default Wrapper;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Title(props) {\n  return <h1 className=\"title\">{props.children}</h1>;\n}\n\nexport default Title;\n","import 'bootstrap/dist/css/bootstrap.min.css';\n\nimport React, { Component } from \"react\";\nimport Navbar from \"./components/Navbar\";\nimport FriendCard from \"./components/FriendCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport friends from \"./friends.json\";\n\n// topscore will keep track of the highest score and yourscore will track user's current score\nlet topscore = 0;\nlet yourscore = 0;\n\nclass App extends Component {\n  // Setting this.state.friends to the friends json array\n  state = {\n    friends,\n    yourscore,\n    topscore\n  };\n\n  //function to shuffle the array\n  shuffle = array => {\n    array.sort(() => Math.random() - 0.5);\n  }\n\n  //I couldn't get all of this to work \n  score  = id => {\n    console.log (\"id ; \" + id);\n\n  let currentclicked ;\n  let currentscore = this.state.yourscore;\n  let bigscore = this.state.topscore;\n  for (var x=0; x<12; x++){\n\n    // loop though and match id to the clicked item;\n\n    if (id === this.state.friends[x].id ){\n      console.log (\"clicked : \" + this.state.friends[x].clicked); \n      console.log (\"name of clicked : \" + this.state.friends[x].name); \n      // currentclicked and currentscore does not respond. current score never goes past 1, do't understand why.\n      currentclicked = this.state.friends[x].clicked;\n  \n      if (currentclicked === 0) {\n        currentscore++;\n        console.log (\"yourscore : \" + currentscore)\n        this.setState({ currentscore });\n        currentclicked = 1;\n        console.log (\"clicked should be 1  \" + this.state.friends[x].clicked)\n\n      }\n      else {\n        if (bigscore<currentscore) {\n          bigscore = currentscore;\n        }\n        currentscore = 0;\n        this.setState({ currentscore });\n        this.setState({ bigscore });\n      }\n    }\n  }\n  this.setState({ currentclicked });\n  this.setState({ currentscore });\n  this.setState({ bigscore });\n\n  // the random sorting works\n  let randomFriends = this.state.friends.sort(() => Math.random() - 0.5); \n  this.setState({ randomFriends });\n \n  console.log (\"topscore : \" + bigscore)\n \n  }\n\n  render() {\n    return (\n      <Wrapper>\n        <Navbar yourScore={this.state.yourscore} totalScore={this.state.topscore} />\n        <Title>Clicky Game</Title>\n        {this.state.friends.map(friend => (\n          <FriendCard\n            score = {this.score}\n            id={friend.id}\n            key={friend.id}\n            name={friend.name}\n            image={friend.image}\n          />\n        ))}\n      </Wrapper>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}